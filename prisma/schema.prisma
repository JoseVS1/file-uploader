// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id  Int @id @default(autoincrement())
  email String  @unique
  username  String @unique
  passwordHash  String
  folders Folder[]
  files File[]
}

model Folder {
  id  Int @id @default(autoincrement())
  name  String
  user  User  @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  Int
  parentFolder  Folder? @relation("FolderHierarchy", fields: [parentFolderId], references: [id], onDelete: Cascade)
  parentFolderId  Int?
  files File[]
  subfolders  Folder[]  @relation("FolderHierarchy")

  @@unique([name, parentFolderId])
}

model File {
  id  Int @id @default(autoincrement())
  url String  @unique
  cloudinary_id String  @unique
  name  String
  resource_type String
  size  Int
  uploaded_at DateTime  @default(now())
  folder  Folder?  @relation(fields: [folderId], references: [id])
  folderId  Int?
  user  User  @relation(fields: [userId], references: [id])
  userId  Int

  @@unique([name, folderId])
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt   DateTime
}